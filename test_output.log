ts-jest[config] (WARN) 
    The "ts-jest" config option "isolatedModules" is deprecated and will be removed in v30.0.0. Please use "isolatedModules: true" in /home/antonio/programming/elevate/elevate1-core-api/tsconfig.json instead, see https://www.typescriptlang.org/tsconfig/#isolatedModules
  
  console.log
    Before creating test question - user1Qs1: { id: 862, name: 'User1 QS1 in Folder1', folderId: 981 }

      at src/routes/__tests__/question.routes.test.ts:318:15

  console.log
    Verified question set: {
      id: 862,
      name: 'User1 QS1 in Folder1',
      folderId: 981,
      createdAt: 2025-05-24T16:50:28.162Z,
      updatedAt: 2025-05-24T16:50:28.162Z
    }

      at src/routes/__tests__/question.routes.test.ts:329:15

  console.log
    Created test question: {
      id: 338,
      text: 'Test Question for GET by ID',
      questionSetId: 862,
      verifiedQuestionSetId: 862,
      user1Qs1Id: 862,
      match: true
    }

      at src/routes/__tests__/question.routes.test.ts:351:15

  console.log
    GET by ID test setup: {
      user1FolderId: 981,
      user1QuestionSetId: 862,
      testQuestionId: 338,
      otherUserFolderId: 983,
      otherUserQuestionSetId: 863,
      otherUserQuestionId: 339
    }

      at src/routes/__tests__/question.routes.test.ts:382:15

  console.log
    Test data for GET by ID: {
      testQuestionId: 338,
      testQuestionSetId: 862,
      user1Qs1Id: 862,
      match: true
    }

      at src/routes/__tests__/question.routes.test.ts:393:15

  console.log
    DEBUG: getQuestionById called with Q_ID: 338, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:104:11)

  console.log
    DEBUG: Direct folder check by id and userId: {
      folderIdNum: 981,
      userId: 172,
      foundFolder: true,
      debugFolder: {
        id: 981,
        name: 'User1 Folder1 For Questions',
        description: null,
        userId: 172,
        createdAt: 2025-05-24T16:50:28.158Z,
        updatedAt: 2025-05-24T16:50:28.158Z
      }
    }

      at log (src/controllers/question.controller.ts:121:13)

  console.log
    DEBUG: Direct questionSet check by id, folderId, and folder.userId: {
      setIdNum: 862,
      folderIdNum: 981,
      userId: 172,
      foundQuestionSet: true,
      debugQuestionSet: {
        id: 862,
        name: 'User1 QS1 in Folder1',
        folderId: 981,
        createdAt: 2025-05-24T16:50:28.162Z,
        updatedAt: 2025-05-24T16:50:28.162Z
      }
    }

      at log (src/controllers/question.controller.ts:130:13)

  console.log
    DEBUG: Simple question check by id and questionSetId: {
      questionId: 338,
      setIdNum: 862,
      foundQuestionSimple: false,
      debugQuestionSimple: null
    }

      at log (src/controllers/question.controller.ts:135:13)

  console.log
    INFO: Combined query: Question not found or access denied for Q_ID: 338, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:154:15)

  console.log
    GET by ID response: {
      status: 404,
      body: { message: 'Question not found or access denied.' }
    }

      at src/routes/__tests__/question.routes.test.ts:404:15

  console.log
    DEBUG: getQuestionById called with Q_ID: 9999, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:104:11)

  console.log
    DEBUG: Direct folder check by id and userId: {
      folderIdNum: 981,
      userId: 172,
      foundFolder: true,
      debugFolder: {
        id: 981,
        name: 'User1 Folder1 For Questions',
        description: null,
        userId: 172,
        createdAt: 2025-05-24T16:50:28.158Z,
        updatedAt: 2025-05-24T16:50:28.158Z
      }
    }

      at log (src/controllers/question.controller.ts:121:13)

  console.log
    DEBUG: Direct questionSet check by id, folderId, and folder.userId: {
      setIdNum: 862,
      folderIdNum: 981,
      userId: 172,
      foundQuestionSet: true,
      debugQuestionSet: {
        id: 862,
        name: 'User1 QS1 in Folder1',
        folderId: 981,
        createdAt: 2025-05-24T16:50:28.162Z,
        updatedAt: 2025-05-24T16:50:28.162Z
      }
    }

      at log (src/controllers/question.controller.ts:130:13)

  console.log
    DEBUG: Simple question check by id and questionSetId: {
      questionId: 9999,
      setIdNum: 862,
      foundQuestionSimple: false,
      debugQuestionSimple: null
    }

      at log (src/controllers/question.controller.ts:135:13)

  console.log
    INFO: Combined query: Question not found or access denied for Q_ID: 9999, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:154:15)

  console.log
    DEBUG: getQuestionById called with Q_ID: 339, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:104:11)

  console.log
    DEBUG: Direct folder check by id and userId: {
      folderIdNum: 981,
      userId: 172,
      foundFolder: true,
      debugFolder: {
        id: 981,
        name: 'User1 Folder1 For Questions',
        description: null,
        userId: 172,
        createdAt: 2025-05-24T16:50:28.158Z,
        updatedAt: 2025-05-24T16:50:28.158Z
      }
    }

      at log (src/controllers/question.controller.ts:121:13)

  console.log
    DEBUG: Direct questionSet check by id, folderId, and folder.userId: {
      setIdNum: 862,
      folderIdNum: 981,
      userId: 172,
      foundQuestionSet: true,
      debugQuestionSet: {
        id: 862,
        name: 'User1 QS1 in Folder1',
        folderId: 981,
        createdAt: 2025-05-24T16:50:28.162Z,
        updatedAt: 2025-05-24T16:50:28.162Z
      }
    }

      at log (src/controllers/question.controller.ts:130:13)

  console.log
    DEBUG: Simple question check by id and questionSetId: {
      questionId: 339,
      setIdNum: 862,
      foundQuestionSimple: false,
      debugQuestionSimple: null
    }

      at log (src/controllers/question.controller.ts:135:13)

  console.log
    INFO: Combined query: Question not found or access denied for Q_ID: 339, QS_ID: 862, F_ID: 981, U_ID: 172

      at log (src/controllers/question.controller.ts:154:15)

  console.log
    Created update test question: {
      id: 340,
      questionSetId: 862,
      verifiedQuestionSetId: 862,
      user1Qs1Id: 862,
      match: true
    }

      at src/routes/__tests__/question.routes.test.ts:467:15

  console.log
    Update test setup: { updateTestQuestionId: 340 }

      at src/routes/__tests__/question.routes.test.ts:475:15

  console.log
    Created delete test question: {
      id: 343,
      questionSetId: 862,
      verifiedQuestionSetId: 862,
      user1Qs1Id: 862,
      match: true
    }

      at src/routes/__tests__/question.routes.test.ts:636:15

  console.log
    Delete test setup: { deleteTestQuestionId: 343, otherUserDeleteQuestionId: 344 }

      at src/routes/__tests__/question.routes.test.ts:666:15

FAIL src/routes/__tests__/question.routes.test.ts
  Question API - GET /api/folders/:folderId/questionsets/:setId/questions
    Successful Retrieval
      ✓ should retrieve all questions for a specific question set (112 ms)
      ✓ should return an empty array if the question set has no questions (25 ms)
    Error Handling & Validation
      ✓ should return 401 if no token is provided (13 ms)
      ✓ should return 400 if folderId is not a number (14 ms)
      ✓ should return 400 if setId is not a number (12 ms)
      ✓ should return 404 if folderId does not exist (16 ms)
      ✓ should return 404 if trying to access questions in another user's folder (14 ms)
      ✓ should return 404 if questionSetId does not exist (16 ms)
      ✓ should return 404 if questionSetId exists but does not belong to the specified folderId (27 ms)
    POST /api/folders/:folderId/questionsets/:setId/questions - Create Question
      ✓ should create a new question successfully with all valid data (35 ms)
      ✓ should create a new question successfully with only required data (text, questionType) (21 ms)
      ✓ should return 401 if no token is provided (11 ms)
      ✓ should return 404 if folderId does not exist (16 ms)
      ✓ should return 404 if questionSetId does not exist (15 ms)
      ✓ should return 404 if trying to create a question in another user's folder (13 ms)
      Input Validation
        ✓ should return 400 if text is missing (15 ms)
        ✓ should return 400 if questionType is missing (13 ms)
        ✓ should return 400 if options is not an array (12 ms)
        ✓ should return 400 if options contains empty strings (13 ms)
        ✓ should return 400 if folderId param is invalid (11 ms)
        ✓ should return 400 if setId param is invalid (11 ms)
    GET /api/folders/:folderId/questionsets/:setId/questions/:id - Get Question by ID
      ✕ should retrieve a specific question by ID (31 ms)
      ✓ should return 401 if no token is provided (9 ms)
      ✓ should return 404 if question ID does not exist (24 ms)
      ✓ should return 404 if trying to access another user's question (22 ms)
      ✓ should return 400 if question ID is invalid (12 ms)
    PUT /api/folders/:folderId/questionsets/:setId/questions/:id - Update Question
      ✕ should update a question successfully with all fields (17 ms)
      ✓ should update a question successfully with partial data (23 ms)
      ✓ should return 401 if no token is provided (10 ms)
      ✓ should return 404 if question ID does not exist (16 ms)
      ✓ should return 404 if trying to update another user's question (24 ms)
      ✓ should return 400 if question ID is invalid (12 ms)
      ✓ should return 400 if text is not a string (12 ms)
      ✓ should return 400 if options is not an array (13 ms)
    DELETE /api/folders/:folderId/questionsets/:setId/questions/:id - Delete Question
      ✕ should delete a question successfully (15 ms)
      ✓ should return 401 if no token is provided (12 ms)
      ✓ should return 404 if question ID does not exist (17 ms)
      ✓ should return 404 if trying to delete another user's question (15 ms)
      ✓ should return 400 if question ID is invalid (12 ms)

  ● Question API - GET /api/folders/:folderId/questionsets/:setId/questions › GET /api/folders/:folderId/questionsets/:setId/questions/:id - Get Question by ID › should retrieve a specific question by ID

    expect(received).toEqual(expected) // deep equality

    Expected: 200
    Received: 404

      407 |       });
      408 |       
    > 409 |       expect(res.statusCode).toEqual(200);
          |                              ^
      410 |       expect(res.body.id).toEqual(testQuestion.id);
      411 |       expect(res.body.text).toEqual('Test Question for GET by ID');
      412 |     });

      at src/routes/__tests__/question.routes.test.ts:409:30
      at fulfilled (src/routes/__tests__/question.routes.test.ts:5:58)

  ● Question API - GET /api/folders/:folderId/questionsets/:setId/questions › PUT /api/folders/:folderId/questionsets/:setId/questions/:id - Update Question › should update a question successfully with all fields

    expect(received).toEqual(expected) // deep equality

    Expected: 200
    Received: 404

      491 |         .send(updateData);
      492 |       
    > 493 |       expect(res.statusCode).toEqual(200);
          |                              ^
      494 |       expect(res.body.text).toEqual(updateData.text);
      495 |       expect(res.body.answer).toEqual(updateData.answer);
      496 |       expect(res.body.questionType).toEqual(updateData.questionType);

      at src/routes/__tests__/question.routes.test.ts:493:30
      at fulfilled (src/routes/__tests__/question.routes.test.ts:5:58)

  ● Question API - GET /api/folders/:folderId/questionsets/:setId/questions › DELETE /api/folders/:folderId/questionsets/:setId/questions/:id - Delete Question › should delete a question successfully

    expect(received).toEqual(expected) // deep equality

    Expected: 204
    Received: 404

      675 |         .set('Authorization', `Bearer ${user1Token}`);
      676 |       
    > 677 |       expect(res.statusCode).toEqual(204);
          |                              ^
      678 |       
      679 |       // Verify question is deleted
      680 |       const checkRes = await request(app)

      at src/routes/__tests__/question.routes.test.ts:677:30
      at fulfilled (src/routes/__tests__/question.routes.test.ts:5:58)

-------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------
File                     | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                         
-------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------
All files                |   49.52 |    42.42 |   45.45 |   47.81 |                                                                           
 src                     |       0 |        0 |       0 |       0 |                                                                           
  server.ts              |       0 |        0 |       0 |       0 | 2-11                                                                      
 src/controllers         |   38.43 |    36.28 |   38.46 |   35.71 |                                                                           
  auth.controller.ts     |   14.81 |        0 |       0 |      12 | 9-62,67-116                                                               
  folder.controller.ts   |     9.6 |        0 |       0 |    6.08 | 9-38,43-71,76-113,118-184,189-236                                         
  question.controller.ts |   80.48 |    75.92 |     100 |   78.76 | 44,93,107-108,112-113,159-162,181-182,194-195,227,245-246,258-259,273-285 
  user.controller.ts     |   22.22 |        0 |       0 |   18.75 | 10-30                                                                     
 src/middleware          |   94.11 |      100 |     100 |   93.93 |                                                                           
  auth.middleware.ts     |   85.71 |      100 |     100 |   84.61 | 20-21                                                                     
  validation.ts          |     100 |      100 |     100 |     100 |                                                                           
 src/routes              |     100 |      100 |     100 |     100 |                                                                           
  auth.ts                |     100 |      100 |     100 |     100 |                                                                           
  folder.routes.ts       |     100 |      100 |     100 |     100 |                                                                           
  question.routes.ts     |     100 |      100 |     100 |     100 |                                                                           
  questionset.routes.ts  |     100 |      100 |     100 |     100 |                                                                           
  user.routes.ts         |     100 |      100 |     100 |     100 |                                                                           
 src/utils               |   57.14 |    33.33 |      50 |      50 |                                                                           
  jwt.ts                 |   57.14 |    33.33 |      50 |      50 | 17,29-35                                                                  
-------------------------|---------|----------|---------|---------|---------------------------------------------------------------------------
Test Suites: 1 failed, 1 total
Tests:       3 failed, 36 passed, 39 total
Snapshots:   0 total
Time:        4.14 s
Ran all test suites matching /src\/routes\/__tests__\/question.routes.test.ts/i.
